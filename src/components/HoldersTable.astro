---
type Minter = {
  minter: string;
  count: number;
};

type Stats = {
  totalSupply: number;
};

const resStats = await fetch("https://api.modularium.art/collection/0xbE25A97896b9CE164a314C70520A4df55979a0c6/stats");
const resMinters = await fetch("https://api.modularium.art/collection/0xbE25A97896b9CE164a314C70520A4df55979a0c6/minters");

if (!resStats.ok || !resMinters.ok) throw new Error("Data fetch failed");

const { totalSupply } = (await resStats.json()) as Stats;
const minters = (await resMinters.json()) as Minter[];

// Sort minters by count
const topMinters = minters
  .sort((a, b) => b.count - a.count)
  .slice(0, 25);

const formatAddress = (addr: string) => {
  if (!addr) return "Unknown";
  if (addr.length > 10) {
    return `${addr.slice(0, 6)}...${addr.slice(-4)}`;
  }
  return addr;
};
---

<div>
  <h2 class="text-sm font-bold mb-2">TOP MINTERS</h2>
  <div class="overflow-y-auto max-h-64">
    <table class="w-full text-xs font-mono">
      <thead class="sticky top-0 bg-black">
        <tr class="text-green-400 border-b border-green-800">
          <th class="text-left py-1">WALLET</th>
          <th class="text-right py-1">MINTED</th>
          <th class="text-right py-1">%</th>
        </tr>
      </thead>
      <tbody>
        {topMinters.map((m) => {
          const pct = (m.count / totalSupply) * 100;
          return (
            <tr class="border-b border-green-900/50 hover:bg-green-900/10">
              <td class="py-0.5 text-green-300">{formatAddress(m.minter)}</td>
              <td class="py-0.5 text-right text-green-400">{m.count}</td>
              <td class="py-0.5 text-right text-green-500">
                {pct >= 0.01 ? `${pct.toFixed(2)}%` : "<0.01%"}
              </td>
            </tr>
          );
        })}
      </tbody>
    </table>
  </div>
</div>